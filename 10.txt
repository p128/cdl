LEX: 
%{ 
#include<stdio.h>
#include"y.tab.h" 
int yylval;
 %} 

%% [a-zA-Z][a-zA-Z0-9]* {return ID;} 
[\t] . {return yytext[0];} 
[\n] {return 0;}
[ ] {return 0;} 
%% 
int yywrap()
 { return 1; } 

YACC: 
%{
 #include<stdio.h> 
int flag=0;
%}
 %token ID 
%% 
S:S '=' L|R {flag++;} ; 
L: '*' R| ID; 
R:L; 
%% 
main() 
{ printf("enter the expression for the grammar  \n S->S=L|R\nL->*R|ID\nR->L");
 yyparse();
 if(flag)
 printf("valid experession\n"); 
else 
yyerror();
 } 
void yyerror() 
{ printf("Invalid expression\n");
 exit(1);
 } 
